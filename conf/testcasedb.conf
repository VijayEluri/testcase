#
# the jdbc connector class name that would appear in a call such as
#      Class.forName(dbClassNm);
#
dbClassNm=org.firebirdsql.jdbc.FBDriver
#
# The next set of items are used to build a dbUrl string of the form
# dbUrl=dbDriver+dbHost+dbPortSep+dbPort+dbUrlSep+dbDatabase
# that can be used in a call of the form
#      Connection myConn = DriverManager.getConnection(dbUrl, dbProps);
# The connection string is defined in pieces because the ArcSde interface,
# for example, is fed the component parts separately.
#
# Some example connection strings:
#       jdbc:firebirdsql:127.0.0.1/3050:C:/db/mcfasdb.fdb
#
# database jdbc driver
#
dbDriver=jdbc:firebirdsql:
#
# database host address
#
dbHost=127.0.0.1
#
# port separator separates host from port number
#
dbPortSep=/
#
# database port
#
dbPort=3050
#
# URL separator separates port from database name
#
dbUrlSep=:
#
# database name
#
dbDatabase=C:/db/testcasedb.fdb
#
# name of a (preferably small) table in the database that can be queried to test
# for database connectivity using a query string such as
#      String qstr = "Select count(*) from " + dbTableNm;
#
dbTableNm=TestGroupTbl
#
# connection properties
# list of parameters of the form keyword1=value1;keyword2=value2;...
# that are parsed and used to build the properties object for the function call
#      Connection myConn = DriverManager.getConnection(dbUrl, dbProps);
#
dbProps=
#
# file containing (enciphered with CDbPass.java) dbUserName and dbPassword for the database.
# If present, then the referenced file will be read, deciphered and the user and passowrd will
# be appended to the Properties string in the form user=xxx;password=yyy
#
# (comment out the next line for active directory integrated security)
dbUserPath=C:/apps/testcase/conf/LocDbUser.txt
